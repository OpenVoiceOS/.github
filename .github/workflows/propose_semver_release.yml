name: Propose SemVer Release
on:
  workflow_call:
    inputs:
      branch:
        type: string
        default: dev
      action_branch:
        description: 'The shared action branch to checkout'
        type: string
        default: main
      python_version:
        description: 'The python version to use'
        type: string
        default: "3.8"
      version_file:
        description: 'The file location to read the version from'
        type: string
        default: version.py
      release_type:
        type: string
        description: 'The type of release to make'
        required: true
      changelog_file:
        type: string
        default: CHANGELOG.md
      

jobs:
  bump_version:
    runs-on: ubuntu-latest
    env:
      VERSION_FILE: ${{ github.workspace }}/action/package/${{ inputs.version_file }}
      TARGET_BRANCH: ${{ inputs.release_type == 'patch' && 'testing' || 'stable' }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      RELEASE_TYPE: ${{ inputs.release_type }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          path: action/package/
      - name: Checkout Scripts Repo
        uses: actions/checkout@v4
        with:
          path: action/github/
          ref: ${{ inputs.action_branch }}
          repository: OpenVoiceOS/.github
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
      - name: Install Python Dependencies
        run: |
          pip install -r action/github/requirements/pip_base.txt
      - name: Increment Version
        id: version
        run: |
          python action/github/scripts/bump_${{ inputs.release_type }}.py
          VERSION=$(python action/package/setup.py --version)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Push Version Change
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Increment Version to ${{ env.VERSION }}
          repository: action/package/
      - name: Check Latest Release
        run: |
          SINCE_TAG=$(python action/github/scripts/semver_cycle_start.py)
          echo "SINCE_TAG=${SINCE_TAG}" >> $GITHUB_ENV
      - name: Generate Changelog
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: action/package/${{ inputs.changelog_file }}
          futureRelease: ${{ env.VERSION }}
          sinceTag: ${{ env.SINCE_TAG }}
      - name: Set up Git Authentication
        run: |
          cd ${{ github.workspace }}/action/package/
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
      - name: Check and Create Target Branch
        run: |
          cd ${{ github.workspace }}/action/package/
          TARGET_BRANCH_EXISTS=$(git ls-remote --heads origin ${{ env.TARGET_BRANCH }} | wc -l)
          if [ "$TARGET_BRANCH_EXISTS" -eq "0" ]; then
            FIRST_COMMIT=$(git rev-list --reverse HEAD | head -n 1)
            git checkout -b ${{ env.TARGET_BRANCH }} "$FIRST_COMMIT"
            git push -v -u origin ${{ env.TARGET_BRANCH }}
          fi
      