name: License Tests
on:
  workflow_call:
    inputs:
      runner:
        description: 'Runner to use'
        type: string
        default: 'ubuntu-latest'
      branch:
        description: 'Branch to check out'
        type: string
        default: ${{ github.ref }}
      python-version:
        description: 'Python version to use'
        type: string
        default: '3.8'
      system-deps:
        description: 'System dependencies (whitespace delimited) to install instead of sys_deb_common_deps.txt'
        required: false
        type: string
      package-extras:
        description: 'Optional extras to install the python package with'
        required: false
        type: string
      packages-exclude:
        description: 'Regex to exclude packages from the license check'
        type: string
        default: '^(precise-runner|fann2|tqdm|bs4|ovos-phal-plugin|ovos-skill|neon-core|nvidia|neon-phal-plugin|bitstruct).*'
      licenses-exclude:
        description: 'Regex to exclude licenses from the license check'
        type: string
        default: '^(Mozilla|NeonAI License v1.0).*$'
jobs:
  license_tests:
    timeout-minutes: 15
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          path: action/package/
      - name: Checkout Scripts Repo
        uses: actions/checkout@v4
        with:
          path: action/github/
          ref: feat/shared_actions1
          repository: OpenVoiceOS/.github
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install Build Tools
        run: |
          python -m pip install build wheel
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          if [ -z ${{ inputs.system-deps }} ]; then
            xargs sudo apt-get install -y < ${{ github.workspace }}/action/github/requirements/sys_deb_common_deps.txt
          else
            sudo apt-get install ${{ inputs.system-deps }}
          fi
      - name: Install repo
        run: |
          cd ${{ github.workspace }}/action/package
          if [ -z ${{ inputs.package-extras }} ]; then
            pip install .
          else
            pip install .[${{ inputs.package-extras }}]
          fi
      - name: Get explicit and transitive dependencies
        run: |
          pip freeze > requirements-all.txt
      - name: Check licenses
        id: license_check_report
        uses: pilosus/action-pip-license-checker@v2
        with:
          requirements: '${{ github.workspace }}/action/package/requirements-all.txt'
          fail: 'Copyleft,Other,Error'
          fails-only: true
          exclude: ${{ inputs.packages-exclude }}
          exclude-license: ${{ inputs.licenses-exclude }}
      - name: Print report
        if: ${{ always() }}
        run: echo "${{ steps.license_check_report.outputs.report }}"