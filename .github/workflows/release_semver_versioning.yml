name: Bump Version (after testing QA started) and announce testing phase

# only triggers on pull request closed events
on:
  workflow_call:
    inputs:
      action_branch:
        description: 'The shared action branch to checkout'
        type: string
        default: main
      python_version:
        description: 'The python version to use'
        type: string
        default: "3.8"
      version_file:
        description: 'The file location to read the version from'
        type: string
        default: version.py
      changelog_file:
        type: string
        default: CHANGELOG.md
      subject:
        type: string
        description: 'Subject title of the push/pull-request event to parse the release type.'
        required: true

jobs:
  bump_version_and_announce_testing:
    env:
      VERSION_FILE: ${{ github.workspace }}/action/package/${{ inputs.version_file }}
      SOURCE_BRANCH: 'testing'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: set up release type
        run: |
          RELEASE_TYPE=$(echo "${{ inputs.subject }}" | grep -oP '(patch|minor|major)')
          echo "RELEASE_TYPE=${RELEASE_TYPE}" >> $GITHUB_ENV
      - name: Checkout Package
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          ref: dev
          fetch-depth: 0
          path: action/package
      - name: Checkout Scripts Repo
        uses: actions/checkout@v4
        with:
          repository: OpenVoiceOS/.github
          ref: ${{ inputs.action_branch }}
          path: action/github/
      - name: Set up python ${{ inputs.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
      - name: Install Common Python Requirements
        run: |
          pip install -r ${{ github.workspace }}/action/github/requirements/pip_base.txt
      - name: Bump to next ${{ env.RELEASE_TYPE }} version
        id: version
        run: |
          cd ${{ github.workspace }}/action/github/scripts/
          VERSION=$(python semver_release_version.py --file ${{ env.VERSION_FILE }})
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          NEXT_VERSION=$(python semver_release_version.py --next --file ${{ env.VERSION_FILE }} --type ${{ env.RELEASE_TYPE }} --save)
          echo "NEXT_VERSION=${NEXT_VERSION}" >> $GITHUB_ENV
      - name: Push Version Change (${{ env.VERSION }} -> ${{ env.NEXT_VERSION }})
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Increment Version to ${{ env.NEXT_VERSION }}
          repository: action/package/
      - name: Notify Matrix Room
        uses: ./action/github/.github/actions/notify_testing_matrix
        with:
          kickoff_pr: false
          release_type: ${{ env.RELEASE_TYPE }}
