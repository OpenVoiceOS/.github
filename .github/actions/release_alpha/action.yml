name: 'Publish Alpha Build'
description: 'This action will generate a distribution and upload it to PyPI'
inputs:
  action_branch:
    description: 'The shared action branch to checkout'
    required: false
    default: 'main'
  version_file:
    description: 'The file location to read the version from'
    required: false
    default: 'version.py'
  python_version:
    description: 'The python version to use'
    required: false
    default: '3.8'
  changelog_file:
    description: 'The file location of the changelog'
    required: false
    default: 'CHANGELOG.md'
  # internal workflow variables 
  release_type:
    description: 'The type of release to make'
    type: string
    default: alpha
  cherrypick_sha:
    description: 'the SHA(s) to cherry pick as a multi-line string'
    type: string

runs:
  using: 'composite'
  env:
      VERSION_FILE: ${{ github.workspace }}/action/package/${{ inputs.version_file }}
      SOURCE_BRANCH: ${{ inputs.release_type == 'alpha' && 'dev' || 'testing' }}
      GITHUB_REPOSITORY: ${{ github.repository }}
  steps:
    - name: Checkout Scripts Repo
      uses: actions/checkout@v4
      with:
        repository: OpenVoiceOS/.github
        ref: ${{ inputs.action_branch }}
        path: action/github/
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}
    - name: Install Python Dependencies
      run: |
        pip install --upgrade pip
        pip install -r ${{ github.workspace }}/action/github/requirements/pip_base.txt
        pip install -r ${{ github.workspace }}/action/github/requirements/pip_build_tools.txt
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        ref: ${{ env.SOURCE_BRANCH }}
        path: action/package/
        fetch-depth: 0
    # testing specific steps. Those releases belong to the previous release cycle
    # to be included in the major/minor/patch release we have to step down to the last release tag and increase from there
    - name: Checkout At Tag And Cherry Pick
      if: ${{ inputs.release_type == 'release' }}
      run: |
        cd ${{ github.workspace }}/action/package/
        TEST_VERSION=$(python setup.py --version)
        VERSION=$(python ${{ github.workspace }}/action/github/scripts/semver_release_version.py --version "$TEST_VERSION" --last)
        NEXT_VERSION=$(python ${{ github.workspace }}/action/github/scripts/semver_release_version.py --version "$VERSION" --next --type alpha)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "NEXT_VERSION=${NEXT_VERSION}" >> $GITHUB_ENV
        git checkout "tags/$VERSION"
        git cherry-pick "${{ inputs.cherrypick_sha }}"
        CHERRYPICKED_SHA=$(git rev-parse HEAD)
        echo "CHERRYPICKED_SHA=${CHERRYPICKED_SHA}" >> $GITHUB_ENV
    - name: Increment Version
      id: version
      if: ${{ inputs.release_type == 'alpha' }}
      run: |
        cd ${{ github.workspace }}/action/github/scripts/
        VERSION=$(python semver_release_version.py --file ${{ env.VERSION_FILE }})
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        NEXT_VERSION=$(python semver_release_version.py --next --type alpha --file ${{ env.VERSION_FILE }} --save)
        echo "NEXT_VERSION=${NEXT_VERSION}" >> $GITHUB_ENV
    - name: change working directory
      run: cd ${{ github.workspace }}/action/package/
    - name: Generate Release Changelog (cropped)
      id: changelog
      uses: heinrichreimer/github-changelog-generator-action@v2.3
      with:
        token: ${{ secrets.GH_PAT }}
        sinceTag: ${{ env.VERSION }}
    - name: Create Pre-release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GH_PAT }}
        tag: ${{ env.NEXT_VERSION }}
        name: Release ${{ env.NEXT_VERSION }}
        body: |
          Changes in this Release
          ${{ steps.changelog.outputs.changelog }}
        commit: ${{ env.CHERRYPICKED_SHA || 'dev' }}
        prerelease: true
    - name: Build Distribution Packages
      run: |
        mkdir -p ${{ github.workspace }}/action/dist
        cd ${{ github.workspace }}/action/package/
        python setup.py sdist bdist_wheel --dist-dir ${{ github.workspace }}/action/dist
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{secrets.PYPI_TOKEN}}
        packages-dir: action/dist/
    - name: Generate Full Changelog
      id: full_changelog
      uses: heinrichreimer/github-changelog-generator-action@v2.3
      with:
        token: ${{ secrets.GH_PAT }}
        output: action/package/${{ inputs.changelog_file }}
    - name: Commit Prerelease Changes (${{ env.VERSION }} -> ${{ env.NEXT_VERSION }})
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: Prerelease Changes ${{ env.NEXT_VERSION }}
        repository: action/package/